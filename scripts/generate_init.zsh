#!/bin/zsh

echo "This script is a work in progress and doesn't work right with certain class imports"
exit 0

SCRIPT_DIR=$(cd -- "$(dirname "$0")" && pwd)
PARENT_DIR=$(dirname "$SCRIPT_DIR")

PACKAGE_DIR=""
for dir in "$PARENT_DIR" "$PARENT_DIR"/*; do
  if [[ -d "$dir" ]] && find "$dir" -maxdepth 1 -name '*.py' | grep -q .; then
    PACKAGE_DIR="$dir"
    break
  fi
done

if [[ -z "$PACKAGE_DIR" ]]; then
  echo "❌ Couldn't find a package directory with .py files."
  exit 1
fi

INIT_FILE="$PACKAGE_DIR/__init__.py"
touch "$INIT_FILE"

echo "# Auto-generated by generate_init.zsh" > "$INIT_FILE"
echo "" >> "$INIT_FILE"

ALL_SYMBOLS=()

for filepath in $(find "$PACKAGE_DIR" -type f -name '*.py' ! -name '__init__.py' ! -path '*/scripts/*'); do
  rel_path=${filepath#$PACKAGE_DIR/}
  import_path=${rel_path%.py}
  import_path=${import_path//\//.}

  symbols=()
  while read -r line; do
    if [[ $line =~ ^(def|class)[[:space:]]+([a-zA-Z_][a-zA-Z0-9_]*) ]]; then
      name=${line#* }
      name=${name%%\(*}     # ✅ Escape the (
      name=${name%%:*}      # Handles class Foo:
      [[ $name == _* ]] && continue
      symbols+=($name)
      ALL_SYMBOLS+=($name)
    fi
  done < "$filepath"

  if (( ${#symbols[@]} > 0 )); then
    joined_symbols=$(IFS=, ; echo "${symbols[*]}")
    echo "from .${import_path} import ${joined_symbols}" >> "$INIT_FILE"
  fi
done

if (( ${#ALL_SYMBOLS[@]} > 0 )); then
  sorted_symbols=("${(@o)ALL_SYMBOLS}")
  all_joined=$(printf '"%s", ' "${sorted_symbols[@]}")
  all_joined="[${all_joined%, }]"
  echo "\n__all__ = $all_joined" >> "$INIT_FILE"
fi

echo "✅ __init__.py updated at $INIT_FILE"